scale.means <- attr(train.scaled, "scaled:center")
scale.sds <- attr(train.scaled, "scaled:scale")
otherdata.wide.tmp <- otherdata.wide %>% data.frame() %>% select(all_of(common.proteins)) %>%
select(-Sex) %>%
scale(., center = scale.means, scale = scale.sds)
lm.res = lm(as.formula(paste0('age ~ ',
# paste(svm1$protein[1:20], collapse = '+'))),
paste(
# svm1 %>% filter(adj.pval < 0.01) %>% pull(protein),
c(svm1$protein[1:20], 'Sex'),
collapse = '+'))),
data = train.comb.reformat %>% data.frame())
svm1 = read_csv(paste0('figures/lm.res/lm.feature.importance.csv'))
svm1 = read_csv(paste0('figures/lm.res/lm.feature.importance.csv'))
svm1 = read_csv(paste0('figures/lm.res/lm.feature.importance.csv'))
svm1$protein[1:20]
lm.res = lm(as.formula(paste0('age ~ ',
# paste(svm1$protein[1:20], collapse = '+'))),
paste(
# svm1 %>% filter(adj.pval < 0.01) %>% pull(protein),
c(svm1$protein[1:20], 'Sex'),
collapse = '+'))),
data = train.comb.reformat %>% data.frame())
predict(lm.res, otherdata.wide %>% data.frame())
otherdata.wide
################################################################################
other1.cns = read.csv('data/other.data/Basel/20240724_P-000507_University-of-Basel_NULISAseq_TAP_Counts_Report_FULL.csv')
other1.cns$SampleName %>% unique()
other1.ifn = read.csv('data/other.data/Basel/20240725_P-000507_University-of-Basel_NULISAseq_TAP_Counts_Report_FULL.csv')
other1.cns %>% head()
other1.ifn %>% head()
# other1.cns %>% filter(str_detect(SampleName, 'D_03_4031-6531_2017-07-04')) %>% select(SampleName) %>% distinct()
# other1.cns %>% filter(str_detect(SampleName, 'D_09')) %>% select(SampleName) %>% distinct()
other1.ifn %>% head()
otherdata = rbind(
other1.cns %>% select(SampleName, SampleType, Target, NPQ),
other1.ifn %>% select(SampleName, SampleType, Target, NPQ)
) %>% group_by(SampleName, Target, SampleType) %>%
summarise(NPQ = mean(NPQ)) %>% ungroup()
otherdata$SampleName
other1.cns$SampleType %>% unique()
otherdata.wide = otherdata %>% pivot_wider(id_cols = SampleName, values_from = 'NPQ', names_from = 'Target') %>%
column_to_rownames('SampleName')
otherdata.wide
colnames(otherdata.wide) <- gsub("[^[:alnum:]]", "", colnames(otherdata.wide))
sample.annotate = read.csv('data/other.data/Basel/Pira_manifest.csv')
sample.annotate %>% head()
sex.annotate = left_join(data.frame(SampleName = rownames(otherdata.wide)), sample.annotate, by = 'SampleName') %>%
select(SampleName, gender) %>% rename(Sex = gender) %>%
mutate(Sex = ifelse(Sex == 'Men', 1, 0) )
otherdata.wide$Sex = sex.annotate
otherdata.wide
################################################################################
other1.cns = read.csv('data/other.data/Basel/20240724_P-000507_University-of-Basel_NULISAseq_TAP_Counts_Report_FULL.csv')
other1.cns$SampleName %>% unique()
other1.ifn = read.csv('data/other.data/Basel/20240725_P-000507_University-of-Basel_NULISAseq_TAP_Counts_Report_FULL.csv')
other1.cns %>% head()
other1.ifn %>% head()
# other1.cns %>% filter(str_detect(SampleName, 'D_03_4031-6531_2017-07-04')) %>% select(SampleName) %>% distinct()
# other1.cns %>% filter(str_detect(SampleName, 'D_09')) %>% select(SampleName) %>% distinct()
other1.ifn %>% head()
otherdata = rbind(
other1.cns %>% select(SampleName, SampleType, Target, NPQ),
other1.ifn %>% select(SampleName, SampleType, Target, NPQ)
) %>% group_by(SampleName, Target, SampleType) %>%
summarise(NPQ = mean(NPQ)) %>% ungroup()
otherdata$SampleName
other1.cns$SampleType %>% unique()
otherdata.wide = otherdata %>% pivot_wider(id_cols = SampleName, values_from = 'NPQ', names_from = 'Target') %>%
column_to_rownames('SampleName')
otherdata.wide
colnames(otherdata.wide) <- gsub("[^[:alnum:]]", "", colnames(otherdata.wide))
sample.annotate = read.csv('data/other.data/Basel/Pira_manifest.csv')
sample.annotate %>% head()
otherdata.wide
sex.annotate = left_join(data.frame(SampleName = rownames(otherdata.wide)), sample.annotate, by = 'SampleName') %>%
select(SampleName, gender) %>% rename(Sex = gender) %>%
mutate(Sex = ifelse(Sex == 'Men', 1, 0) )
sex.annotate
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
svm1 = read_csv(paste0('figures/lm.res/lm.feature.importance.csv'))
svm1$protein[1:20]
lm.res = lm(as.formula(paste0('age ~ ',
# paste(svm1$protein[1:20], collapse = '+'))),
paste(
# svm1 %>% filter(adj.pval < 0.01) %>% pull(protein),
c(svm1$protein[1:20], 'Sex'),
collapse = '+'))),
data = train.comb.reformat %>% data.frame())
predict(lm.res, otherdata.wide %>% data.frame())
otherdata.wide
model.training <- lm(Age ~ pred.age,
data = data.frame(pred.age = predict(lm.res, train.comb.reformat[, !colnames(train.comb.reformat) %in% "age"] %>% data.frame()),
Age = train.comb.reformat[, 'age']))
model.training
pred.res <- predict(lm.res, otherdata.wide %>% data.frame())
pred.res
# pred_svm_untuned = pred_svm_untuned - 5
# pred.res = pred.res[,1]
new.pred = coefficients(model.training)['pred.age'] * pred.res + coefficients(model.training)[1]
new.pred
train.comb.reformat
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/01.05.avg.model.performance.cv.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
train.comb.reformat
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
otherdata.wide
str(otherdata.wide)
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
otherdata.wide$Sex = sex.annotate$Sex
otherdata.wide = otherdata.wide %>% as.matrix()
library(pROC)
# browser()
train.comb.reformat = train.comb
colnames(train.comb.reformat) <- gsub("[^[:alnum:]]", "", colnames(train.comb.reformat))
# exclude.proteins = setdiff(union(colnames(train.comb.reformat), colnames(otherdata.wide)),
#                            intersect(colnames(train.comb.reformat), colnames(otherdata.wide)))
# exclude.proteins = grep('age', exclude.proteins, invert = T, value = T)
# exclude.proteins
common.proteins = intersect(colnames(train.comb.reformat), colnames(otherdata.wide))
common.proteins
train.scaled = train.comb.reformat %>% data.frame() %>% select(all_of(common.proteins)) %>%
select(-Sex) %>% scale()
train.comb.reformat = train.scaled %>% data.frame() %>%
mutate(age = train.comb.reformat[, 'age'], Sex = train.comb.reformat[, 'Sex']) %>%
as.matrix()
scale.means <- attr(train.scaled, "scaled:center")
scale.sds <- attr(train.scaled, "scaled:scale")
otherdata.wide.tmp <- otherdata.wide %>% data.frame() %>% select(all_of(common.proteins)) %>%
select(-Sex) %>%
scale(., center = scale.means, scale = scale.sds)
otherdata.wide.tmp$Sex = otherdata.wide$Sex
otherdata.wide.tmp$Sex = otherdata.wide[, 'Sex']
otherdata.wide.tmp
otherdata.wide.tmp <- otherdata.wide %>% data.frame() %>% select(all_of(common.proteins)) %>%
select(-Sex) %>%
scale(., center = scale.means, scale = scale.sds)
otherdata.wide.tmp$Sex = otherdata.wide[, 'Sex', drop = T]
otherdata.wide.tmp <- otherdata.wide %>% data.frame() %>% select(all_of(common.proteins)) %>%
select(-Sex) %>%
scale(., center = scale.means, scale = scale.sds)
otherdata.wide[, 'Sex', drop = T]
otherdata.wide.tmp
# otherdata.wide.tmp$Sex = otherdata.wide[, 'Sex', drop = T]
otherdata.wide.tmp %>% data.frame() %>% mutate(Sex = otherdata.wide[, 'Sex', drop = T])
otherdata.wide.tmp <- otherdata.wide %>% data.frame() %>% select(all_of(common.proteins)) %>%
select(-Sex) %>%
scale(., center = scale.means, scale = scale.sds)
# otherdata.wide.tmp$Sex = otherdata.wide[, 'Sex', drop = T]
otherdata.wide.tmp = otherdata.wide.tmp %>% data.frame() %>% mutate(Sex = otherdata.wide[, 'Sex', drop = T])
otherdata.wide.tmp = otherdata.wide
otherdata.wide.tmp
otherdata.wide = otherdata.wide.tmp %>% as.matrix()
otherdata.wide.tmp
otherdata.wide
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
otherdata.wide
train.comb.reformat
new.pred
length(new.pred)
others.age
length(others.age)
dim(others.age)
otherdata.wide
dim(otherdata.wide)
pred.res <-predict(
light_gbn_tuned,
otherdata.wide ,
)
# pred_svm_untuned = pred_svm_untuned - 5
pred.res
# pred_svm_untuned = pred_svm_untuned - 5
pred.res %>% length()
# pred_svm_untuned = pred_svm_untuned - 5
pred.res
# pred_svm_untuned = pred_svm_untuned - 5
pred.res %>% length()
others.age = data.frame(SampleName = rownames(otherdata.wide)) %>%
left_join(sample.annotate %>% select(SampleName, age) %>% distinct(), by = 'SampleName')
others.age %>% head()
others.age$age
pred.rmse = RMSE(pred.res,  others.age$age, na.rm = T)
adj.pred.rmse = RMSE(new.pred, others.age$age, na.rm = T)
new.pred
length(new.pred)
new.pred = coefficients(model.training)['pred.age'] * pred.res + coefficients(model.training)[1]
new.pred
new.pred %>% length()
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
# pred_svm_untuned = pred_svm_untuned - 5
pred.res %>% length()
new.pred %>% length()
model.type
test.fold.i
model.training
# browser()
pred.res <-predict(
m_svm_untuned,
newdata = otherdata.wide,
)
# pred_svm_untuned = pred_svm_untuned - 5
pred.res %>% length()
otherdata.wide
dim(otherdata.wide)
m_svm_untuned
train.comb.reformat
otherdata.wide
otherdata.wide[,'Sex']
otherdata.wide
sample.annotate
sample.annotate$age
otherdata.wide[, 'Sex']
otherdata.wide = otherdata %>% pivot_wider(id_cols = SampleName, values_from = 'NPQ', names_from = 'Target') %>%
column_to_rownames('SampleName') %>% filter(is.na(Sex))
otherdata.wide
otherdata.wide = otherdata %>% pivot_wider(id_cols = SampleName, values_from = 'NPQ', names_from = 'Target') %>%
column_to_rownames('SampleName') %>% filter(is.na(Sex))
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/04.01.lmu.predict.whole.training.R")
otherdata.wide
sample.annotate
sample.annotate$Sex
sex.annotate = left_join(data.frame(SampleName = rownames(otherdata.wide)), sample.annotate, by = 'SampleName') %>%
select(SampleName, gender) %>% rename(Sex = gender) %>%
mutate(Sex = ifelse(Sex == 'Men', 1, 0) )
sample.annotate
head(sample.annotate)
rownames(otherdata.wide)
sample.annotate$Sex
sex.annotate = left_join(data.frame(Sample.ID = rownames(otherdata.wide)), sample.annotate, by = 'Sample.ID') %>%
select(Sample.ID, Sex) %>%
mutate(Sex = ifelse(str_detect(Sex, 'm'), 1, 0) )
sex.annotate
otherdata.wide
otherdata.wide$Sex = sex.annotate$Sex
otherdata.wide = otherdata.wide %>% filter(!is.na(Sex)) %>%  as.matrix()
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/04.01.lmu.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/04.01.lmu.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/04.01.lmu.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/04.01.lmu.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/04.01.lmu.predict.whole.training.R")
bridged.alpha.full.data.wide
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
bridged.alpha.full.data.wide
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
bridged.alpha.full.data.wide
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
train.scaled = train.comb.reformat %>% data.frame() %>% select(all_of(common.proteins)) %>%
select(-Sex) %>% scale()
train.comb.reformat
x.variables
train
train.comb
otherdata.wide
Q
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
otherdata.wide
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
test.fold.i
model.type
svm1 = read_csv(paste0('figures/model.iter.12/', model.type, '/both/both.model.', test.fold.i, '.csv'))
sorted.res = svm1 %>% arrange(rmse)
j = 1
glm.manual = glmnet(
x =  train.comb.reformat[, !colnames(train.comb.reformat) %in% "age"],
y = train.comb.reformat[, 'age'],
alpha = sorted.res$alpha[j],
lambda = sorted.res$lambda[j]
)
model.training <- lm(Age ~ pred.age,
data = data.frame(pred.age = predict(glm.manual, train.comb.reformat[, !colnames(train.comb.reformat) %in% "age"])[,1],
Age = train.comb.reformat[, 'age']))
model.training
train.comb.reformat
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
train.comb.reformat
harmonized.i
org.full.data.wide
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/c.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/c.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/02.04.coeff.analysis.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/02.05.plot.coeff.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/02.05.plot.coeff.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/02.05.plot.coeff.R")
var.col
lgbm.coeff.rank
lgbm.coeff.rank %>% arrange(rank) %>% pull(!!sym(var.col)) %>% unique()
all.lgbm.iter.coeffs
all.lgbm.iter.coeffs
lgbm.coeff.rank
lgbm.coeff.rank %>% filter(model.n == 'model.coeff.1')
lgbm.coeff.rank %>% filter(model.n == 'model.coeff.1') %>% arrange(rank)
all.lgbm.iter.coeffs %>% filter(Feature == 'GFAP')
all.lgbm.iter.coeffs
lgbm.coeff.rank
lgbm.coeff.rank %>% filter(Feature == 'TREM2')
# Step 1: Calculate group means
group_means <- lgbm.coeff.rank %>%
group_by(!!sym(var.col)) %>%
summarise(mean_value = mean(rank, na.rm = TRUE))
group_means
lgbm.coeff.rank %>% left_join(group_means, by = 'Feature')
lgbm.coeff.rank = lgbm.coeff.rank %>% left_join(group_means, by = 'Feature')
p = lgbm.coeff.rank %>%
filter(!!sym(var.col) %in% interested.feature) %>%
arrange(mean_value) %>%
mutate(!!sym(var.col) := fct_inorder(!!sym(var.col))) %>%
# .[1:50, ] %>%
ggplot(., aes(!!sym(var.col), rank, fill = model.n)) +
# geom_col(width = 0.7, alpha = 0.8) +  # Bar plot
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_errorbar(aes(ymin = rank - sd.rank, ymax = rank + sd.rank),
position = position_dodge(0.9),  # Must match geom_col position!
width = 0.2,            # Width of error bar ends
size = 0.8,             # Thickness of error bars
color = "black") +
labs(title = paste0(model.type, ', ', region.i),
x = "Target",
y = "Mean Rank") +
coord_cartesian(ylim = c(0, 200)) +
theme_minimal() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
print(p)
Q
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/02.05.plot.coeff.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/01.04.model.performance.plots.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/01.04.model.performance.plots.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/01.04.model.performance.plots.R")
iter.model.scale %>%
arrange(desc(sum.metric)) %>%
# .[1:100,] %>%
# arrange(auc) %>%
arrange(auc) %>%
mutate(j = 1:n()) %>%
mutate(auc = auc * 100) %>%
pivot_longer(cols = c(rmse, auc, error), names_to = 'metric') %>%
ggplot()+
ylim(c(0, 80)) +
geom_point(aes(j, value, color = metric))
iter.model %>%
# .[1:1000,] %>%
mutate(auc = auc * 100) %>%
pivot_longer(cols = c(rmse, auc, error), names_to = 'metric') %>%
ggplot()+
geom_point(aes(a, value, color = metric)) +
geom_vline(data = best.metrics.row
, aes(xintercept = j, color = metric))
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/01.04.model.performance.plots.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/01.04.model.performance.plots.R")
iter.model.scale %>%
arrange(desc(sum.metric)) %>%
# .[1:100,] %>%
# arrange(auc) %>%
arrange(auc) %>%
mutate(j = 1:n()) %>%
mutate(auc = auc * 100) %>%
pivot_longer(cols = c(rmse, auc, error), names_to = 'metric') %>%
ggplot()+
ylim(c(0, 80)) +
geom_point(aes(j, value, color = metric))
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/c.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/c.R")
lilly.data.inflam
lilly.data.cns
otherdata.wide
lilly.data
otherdata.wide
otherdata.wide = lilly.data %>% pivot_wider(id_cols = Deidentified, values_from = 'NPQ', names_from = 'Target')
otherdata.wide %>% head()
lilly.data.cns
lilly.data.cns %>% select(Deidentified, Sex)
otherdata.wide
otherdata.wide %>% left_join(age.info)
age.info = lilly.data.cns %>% select(Deidentified, Sex) %>%
mutate(Sex = ifelse(Sex == 'M', 1, 0))
otherdata.wide %>% left_join(age.info)
otherdata.wide = otherdata.wide %>% left_join(age.info, by = 'Deidentified')
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
age.info = lilly.data.cns %>% select(Deidentified, Sex) %>%
mutate(Sex = ifelse(Sex == 'M', 1, 0))
otherdata.wide = otherdata.wide %>% left_join(age.info, by = 'Deidentified') %>%
column_to_rownames('Deidentified')
otherdata.wide = otherdata.wide %>% left_join(age.info %>% distinct(), by = 'Deidentified') %>%
column_to_rownames('Deidentified')
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
train.comb.reformat
train.comb.reformat[,'Sex']
x.variables
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.lilly.predict.R")
train.comb.reformat
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/c.R")
debugSource("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
groups <-
fviz_pca_ind(res.pca,
col.ind = inflam.groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
label = 'none',
repel = TRUE
) %>% print()
combined.wide = rbind(
# alpha.inflam.wide.bridged %>% t() %>% data.frame(),
# argo.inflam.wide %>% t() %>% data.frame()
alpha.cns.wide.bridged %>% t() %>% data.frame(),
argo.cns.wide %>% t() %>% data.frame()
)
res.pca = prcomp(combined.wide, scale = T)
inflam.groups = as.factor(c(rep('alpha',ncol(alpha.inflam.wide)), rep('argo', ncol(argo.inflam.wide))))
groups <-
fviz_pca_ind(res.pca,
col.ind = inflam.groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
label = 'none',
repel = TRUE
) %>% print()
# argo.inflam.wide
# both.methu.data = inner_join(bridged.full.data, argo.data.inflam, by = c('subject.id', 'Target'), suffix = c('.alpha', '.argo'))
both.methu.data %>%
ggplot(aes(NPQ.alpha, NPQ.argo, color = Target)) +
geom_point() +
geom_abline(slope = 1) +
theme(legend.position = 'None')
both.methu.data = inner_join(alpha.data.cns, argo.data.cns, by = c('subject.id', 'Target'), suffix = c('.alpha', '.argo'))
both.methu.data
# argo.inflam.wide
# both.methu.data = inner_join(bridged.full.data, argo.data.inflam, by = c('subject.id', 'Target'), suffix = c('.alpha', '.argo'))
both.methu.data %>%
ggplot(aes(NPQ.alpha, NPQ.argo, color = Target)) +
geom_point() +
geom_abline(slope = 1) +
theme(legend.position = 'None')
both.methu.data = inner_join(
alpha.cns.wide.bridged %>% rownames_to_column('Target') %>% pivot_longer(cols = !Target, names_to = 'subject.id', values_to = 'NPQ'),
argo.cns.wide %>% rownames_to_column('Target') %>% pivot_longer(cols = !Target, names_to = 'subject.id', values_to = 'NPQ'),
by = c('subject.id', 'Target'), suffix = c('.alpha', '.argo'))
both.methu.data
# argo.inflam.wide
# both.methu.data = inner_join(bridged.full.data, argo.data.inflam, by = c('subject.id', 'Target'), suffix = c('.alpha', '.argo'))
both.methu.data %>%
ggplot(aes(NPQ.alpha, NPQ.argo, color = Target)) +
geom_point() +
geom_abline(slope = 1) +
theme(legend.position = 'None')
res.table = data.frame()
res.table
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
Q
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/05.01.methuselah.argo.predict.whole.training.R")
res.table
res.table %>% data.table::rbindlist()
res.table.final = res.table %>% data.table::rbindlist()
res.table.final
res.table.final %>% mutate(test.fold = ifelse(test.fold == 6, 'best.param', test.fold))
read.csv('figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('figures/prediction/basel.whole.training/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/basel.whole.training/res.table.csv')
read.csv('figures/prediction/lmu.whole.training//res.table.csv')
read.csv('figures/prediction/basel.whole.training/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/basel.whole.training/res.table.csv')
read.csv('figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('figures/prediction/basel.whole.training/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/basel.whole.training/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/basel.whole.training/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('figures/prediction/basel.whole.training/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/basel.whole.training/res.table.csv')
read.csv('figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('figures/prediction/basel.whole.training/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/basel.whole.training/res.table.csv')
read.csv('figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('figures/prediction/basel.whole.training/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/basel.whole.training/res.table.csv')
read.csv('figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/lmu.whole.training/Serum/res.table.csv')
read.csv('figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
read.csv('../aging prediction scaled/figures/prediction/methuselah.argo/bridged/include.capped/res.table.csv')
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/03.03.basel.predict.whole.training.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/c.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/02.05.plot.coeff.R")
source("~/Desktop/aging prediction/aging prediction scaled sex/scripts/02.05.plot.coeff.R")
